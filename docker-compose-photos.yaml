# ||--------------------------------------------------------------------------------||
# ||                               Photo Applications                               ||
# ||--------------------------------------------------------------------------------||

version: "3.9"

services:
  immich_server:
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
    container_name: immich_server
    hostname: immich-server
    depends_on:
      - immich_redis
      - immich_database
    environment:
      - UPLOAD_LOCATION=${PHOTOS_DIR_LOCAL}
      - DB_DATA_LOCATION=${CONFIG_BASE_DIR}/immich
      - IMMICH_VERSION=${IMMICH_VERSION}
      - DB_PASSWORD=${IMMICH_DB_PASSWORD}
      - DB_USERNAME=${IMMICH_DB_USERNAME}
      - DB_DATABASE_NAME=${IMMICH_DB_DATABASE_NAME}
      - REDIS_HOSTNAME=immich-redis
      - DB_HOSTNAME=immich-database
    networks:
      - media
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${PHOTOS_DIR_LOCAL}:/usr/src/app/upload
    ports:
      - 2283:3001
    command: ['start.sh', 'immich']
    restart: unless-stopped

  immich_microservices:
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
    container_name: immich_microservices
    hostname: immich-microservices
    depends_on:
      - immich_redis
      - immich_database
    environment:
      - UPLOAD_LOCATION=${PHOTOS_DIR_LOCAL}
      - DB_DATA_LOCATION=${CONFIG_BASE_DIR}/immich
      - IMMICH_VERSION=${IMMICH_VERSION}
      - DB_PASSWORD=${IMMICH_DB_PASSWORD}
      - DB_USERNAME=${IMMICH_DB_USERNAME}
      - DB_DATABASE_NAME=${IMMICH_DB_DATABASE_NAME}
      - REDIS_HOSTNAME=immich-redis
      - DB_HOSTNAME=immich-database
    networks:
      - media
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${PHOTOS_DIR_LOCAL}:/usr/src/app/upload
    command: ['start.sh', 'microservices']
    restart: unless-stopped

  immich_machine_learning:
    image: ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION:-release}
    container_name: immich_machine_learning
    hostname: immich-machine-learning
    environment:
      - UPLOAD_LOCATION=${PHOTOS_DIR_LOCAL}
      - DB_DATA_LOCATION=${CONFIG_BASE_DIR}/immich
      - IMMICH_VERSION=${IMMICH_VERSION}
      - DB_PASSWORD=${IMMICH_DB_PASSWORD}
      - DB_USERNAME=${IMMICH_DB_USERNAME}
      - DB_DATABASE_NAME=${IMMICH_DB_DATABASE_NAME}
      - REDIS_HOSTNAME=immich-redis
      - DB_HOSTNAME=immich-database
    volumes:
      - ${CONFIG_BASE_DIR}/immich/cache:/cache
    restart: unless-stopped

  immich_redis:
    image: docker.io/redis:6.2-alpine@sha256:e31ca60b18f7e9b78b573d156702471d4eda038803c0b8e6f01559f350031e93
    container_name: immich_redis
    hostname: immich-redis
    environment:
      - UPLOAD_LOCATION=${PHOTOS_DIR_LOCAL}
      - DB_DATA_LOCATION=${CONFIG_BASE_DIR}/immich/database
      - IMMICH_VERSION=${IMMICH_VERSION}
      - DB_PASSWORD=${IMMICH_DB_PASSWORD}
      - DB_USERNAME=${IMMICH_DB_USERNAME}
      - DB_DATABASE_NAME=${IMMICH_DB_DATABASE_NAME}
      - REDIS_HOSTNAME=immich-redis
      - DB_HOSTNAME=immich-database
    networks:
      - media
    healthcheck:
      test: redis-cli ping || exit 1
    restart: unless-stopped

  immich_database:
    container_name: immich_database
    hostname: immich-database
    image: docker.io/tensorchord/pgvecto-rs:pg14-v0.2.0@sha256:90724186f0a3517cf6914295b5ab410db9ce23190a2d9d0b9dd6463e3fa298f0
    environment:
      - POSTGRES_DB=${IMMICH_DB_DATABASE_NAME}
      - POSTGRES_INITDB_ARGS='--data-checksums'
      - POSTGRES_PASSWORD=${IMMICH_DB_PASSWORD}
      - POSTGRES_USER=${IMMICH_DB_USERNAME}
      - REDIS_HOSTNAME=immich-redis
      - DB_HOSTNAME=immich-database
    networks:
      - media
    volumes:
      - ${CONFIG_BASE_DIR}/immich/database:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready --dbname='${IMMICH_DB_DATABASE_NAME}' || exit 1; Chksum="$$(psql --dbname='${IMMICH_DB_DATABASE_NAME}' --username='${IMMICH_DB_USERNAME}' --tuples-only --no-align --command='SELECT SUM(checksum_failures) FROM pg_stat_database')"; echo "checksum failure count is $$Chksum"; [ "$$Chksum" = '0' ] || exit 1
      interval: 5m
      start_interval: 30s
      start_period: 5m
    command: ["postgres", "-c" ,"shared_preload_libraries=vectors.so", "-c", 'search_path="$$user", public, vectors', "-c", "logging_collector=on", "-c", "max_wal_size=2GB", "-c", "shared_buffers=512MB", "-c", "wal_compression=on"]
    restart: unless-stopped

  photoprism:
    image: photoprism/photoprism:latest
    container_name: photoprism
    hostname: photoprism
    stop_grace_period: 10s
    depends_on:
      - photoprism_mariadb
    security_opt:
      - seccomp:unconfined
      - apparmor:unconfined
    environment:
      - PGID=${PGID}
      - PHOTOPRISM_ADMIN_PASSWORD=${PHOTOPRISM_PASSWORD}
      - PHOTOPRISM_ADMIN_USER=${PHOTOPRISM_USERNAME}
      - PHOTOPRISM_AUTH_MODE=password
      - PHOTOPRISM_DATABASE_DRIVER=mysql
      - PHOTOPRISM_DATABASE_NAME=${PHOTOPRISM_DATABASE_NAME}
      - PHOTOPRISM_DATABASE_PASSWORD=${PHOTOPRISM_DATABASE_PASSWORD}
      - PHOTOPRISM_DATABASE_SERVER=photoprism-mariadb:3306
      - PHOTOPRISM_DATABASE_USER=${PHOTOPRISM_DATABASE_USER}
      - PHOTOPRISM_DEFAULT_TLS=true
      - PHOTOPRISM_DETECT_NSFW=false
      - PHOTOPRISM_DISABLE_CHOWN=false
      - PHOTOPRISM_DISABLE_CLASSIFICATION=false
      - PHOTOPRISM_DISABLE_FACES=false
      - PHOTOPRISM_DISABLE_RAW=false
      - PHOTOPRISM_DISABLE_SETTINGS=false
      - PHOTOPRISM_DISABLE_TENSORFLOW=false
      - PHOTOPRISM_DISABLE_TLS=false
      - PHOTOPRISM_DISABLE_VECTORS=false
      - PHOTOPRISM_DISABLE_WEBDAV=false
      - PHOTOPRISM_EXPERIMENTAL=false
      - PHOTOPRISM_FFMPEG_BITRATE=64
      - PHOTOPRISM_FFMPEG_ENCODER=software
      - PHOTOPRISM_FFMPEG_SIZE=3840
      - PHOTOPRISM_GID=${PGID}
      - PHOTOPRISM_HTTP_COMPRESSION=gzip
      - PHOTOPRISM_INIT="https gpu tensorflow"
      - PHOTOPRISM_JPEG_QUALITY=100
      - PHOTOPRISM_LOG_LEVEL=info
      - PHOTOPRISM_ORIGINALS_LIMIT=1000000
      - PHOTOPRISM_RAW_PRESETS=false
      - PHOTOPRISM_READONLY=false
      - PHOTOPRISM_SITE_AUTHOR="John Wyles"
      - PHOTOPRISM_SITE_CAPTION="A walk down memory lane..."
      - PHOTOPRISM_SITE_DESCRIPTION="A walk down memory lane..."
      - PHOTOPRISM_SITE_TITLE="PhotoPrism"
      - PHOTOPRISM_SITE_URL=http://localhost:2342/
      - PHOTOPRISM_UID=${PUID}
      - PHOTOPRISM_UMASK=${UMASK}
      - PHOTOPRISM_UPLOAD_NSFW=true
      - PUID=${PUID}
      - TZ=${TZ}
      - UMASK=${UMASK}
    networks:
      - media
    working_dir: "/photoprism"
    volumes:
      - ${PHOTOS_DIR_LOCAL}:/photoprism/originals
      - ${CONFIG_BASE_DIR}/photoprism/storage:/photoprism/storage
    ports:
      - 2342:2342
    restart: unless-stopped

  photoprism_mariadb:
    image: mariadb:11
    container_name: photoprism_mariadb
    hostname: photoprism-mariadb
    stop_grace_period: 5s
    security_opt:
      - seccomp:unconfined
      - apparmor:unconfined
    environment:
      MARIADB_AUTO_UPGRADE: 1
      MARIADB_INITDB_SKIP_TZINFO: 1
      MARIADB_DATABASE: ${PHOTOPRISM_DATABASE_NAME}
      MARIADB_USER: ${PHOTOPRISM_DATABASE_USER}
      MARIADB_PASSWORD: ${PHOTOPRISM_DATABASE_PASSWORD}
      MARIADB_ROOT_PASSWORD: ${PHOTOPRISM_DATABASE_ROOT_PASSWORD}
    networks:
      - media
    volumes:
      - ${CONFIG_BASE_DIR}/photoprism/database:/var/lib/mysql
    command: --innodb-buffer-pool-size=512M --transaction-isolation=READ-COMMITTED --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --max-connections=512 --innodb-rollback-on-timeout=OFF --innodb-lock-wait-timeout=60
    restart: unless-stopped

networks:
  media:
    name: media
    external: true
    driver: bridge
    driver_opts:
      com.docker.network.bridge.enable_icc: "true"
      com.docker.network.bridge.enable_ip_masquerade: "true"
      com.docker.network.bridge.host_binding_ipv4: "0.0.0.0"
      com.docker.network.bridge.name: "media"
      com.docker.network.driver.mtu: "1500"
    ipam:
      config:
        - subnet: ${SUBNET}
          gateway: ${GATEWAY_IP}
          ip_range: ${IP_RANGE}
