# ||--------------------------------------------------------------------------------||
# ||                               Other Applications                               ||
# ||--------------------------------------------------------------------------------||

# TODO: Should ALL services have "depends_on" gluetun?

version: "3.7"

services:
  searxng:
    image: searxng/searxng:latest
    container_name: searxng
    hostname: searxng
    environment:
      - SEARXNG_BASE_URL=https://${SEARXNG_HOSTNAME:-localhost}/
    networks:
      - media
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
    logging:
      driver: json-file
      options:
        max-size: 1m
        max-file: 1
    volumes:
      - ${CONFIG_BASE_DIR}/searxng:/etc/searxng:rw
    ports:
      - 8082:8080

  syncthing:
    image: lscr.io/linuxserver/syncthing:latest
    container_name: syncthing
    hostname: syncthing
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
      - UMASK=${UMASK}
    networks:
      - media
    volumes:
      - ${CONFIG_DATA_DIR}:/downloads
      - ${CONFIG_BASE_DIR}/syncthing:/config
      - /volume1/Documents/sync:/sync
    ports:
      - 8384:8384
      - 22000:22000/udp
      - 22000:22000/tcp
      - 21027:21027/udp
    restart: unless-stopped

  tailscale:
    image: tailscale/tailscale:latest
    container_name: tailscale
    hostname: ${TAILSCALE_HOSTNAME}
    cap_add:
      - NET_ADMIN
      - NET_RAW
      - SYS_MODULE
    privileged: true
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TAILSCALE_HOSTNAME=${TAILSCALE_HOSTNAME:?err}
      - TAILSCALE_STATE_ARG=${TAILSCALE_STATE_ARG}
      - TS_ACCEPT_DNS=${TS_ACCEPT_DNS}
      - TS_AUTHKEY=${TS_AUTHKEY:?err}
      - TS_DEST_IP=${TS_DEST_IP}
      - TS_EXTRA_ARGS=${TS_EXTRA_ARGS}
      - TS_KUBE_SECRET=${TS_KUBE_SECRET}
      - TS_OUTBOUND_HTTP_PROXY_LISTEN=${TS_OUTBOUND_HTTP_PROXY_LISTEN}
      - TS_ROUTES=${TS_ROUTES}
      - TS_SOCKET=${TS_SOCKET}
      - TS_SOCKS5_SERVER=${TS_SOCKS5_SERVER}
      - TS_STATE_DIR=${TS_STATE_DIR}
      - TS_TAILSCALED_EXTRA_ARGS=${TS_TAILSCALED_EXTRA_ARGS}
      - TS_USERSPACE=${TS_USERSPACE}
      - TZ=${TZ}
      - UMASK=${UMASK}
    network_mode: host
    volumes:
      - ${CONFIG_BASE_DIR}/tailscale/varlib:/var/lib
      - /dev/net/tun:/dev/net/tun
      - ${CONFIG_BASE_DIR}/tailscale/tmp:/tmp
    restart: unless-stopped

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    hostname: watchtower
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
      - UMASK=${UMASK}
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_INCLUDE_RESTARTING=true
      - WATCHTOWER_INCLUDE_STOPPED=true
      - WATCHTOWER_LABEL_ENABLE=false
      - WATCHTOWER_NOTIFICATION_REPORT=true
      - WATCHTOWER_NOTIFICATION_URL=${WATCHTOWER_NOTIFICATION_URL}
      - WATCHTOWER_POLL_INTERVAL=${WATCHTOWER_POLL_INTERVAL}
      - WATCHTOWER_REMOVE_VOLUMES=true
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    networks:
      - media
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped

networks:
  media:
    name: media
    # external: true
    driver: bridge
    driver_opts:
      com.docker.network.bridge.enable_icc: "true"
      com.docker.network.bridge.enable_ip_masquerade: "true"
      com.docker.network.bridge.host_binding_ipv4: "0.0.0.0"
      com.docker.network.bridge.name: "media"
      com.docker.network.driver.mtu: "1500"
    ipam:
      config:
        - subnet: ${SUBNET}
          gateway: ${GATEWAY_IP}
          ip_range: ${IP_RANGE}
