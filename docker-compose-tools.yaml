# ||--------------------------------------------------------------------------------||
# ||                               Other Applications                               ||
# ||--------------------------------------------------------------------------------||

# TODO: Should ALL services have "depends_on" gluetun?

version: "3.7"

services:
  iperf3:
    image: networkstatic/iperf3
    container_name: iperf3
    hostname: iperf3
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
      - UMASK=${UMASK}
    networks:
      - media
    ports:
      - 5201:5201
    command: '--server'
    restart: "no"

  # photoprism:
  #   ## Use photoprism/photoprism:preview for testing preview builds:
  #   image: photoprism/photoprism:latest
  #   container_name: photoprism
  #   hostname: photoprism
  #   ## Don't enable automatic restarts until PhotoPrism has been properly configured and tested!
  #   ## If the service gets stuck in a restart loop, this points to a memory, filesystem, network, or database issue:
  #   ## https://docs.photoprism.app/getting-started/troubleshooting/#fatal-server-errors
  #   # restart: unless-stopped
  #   stop_grace_period: 10s
  #   depends_on:
  #     - mariadb
  #   security_opt:
  #     - seccomp:unconfined
  #     - apparmor:unconfined
  #   ports:
  #     ## Web server port mapping in the format "Host:Container". To use a different port, change the host port
  #     ## on the left-hand side and keep the container port, e.g. "80:2342" (for HTTP) or "443:2342 (for HTTPS):
  #     - "2342:2342"
  #   environment:
  #     PHOTOPRISM_ADMIN_USER: "admin"                 # admin login username
  #     PHOTOPRISM_ADMIN_PASSWORD: "password"          # initial admin password (8-72 characters)
  #     PHOTOPRISM_AUTH_MODE: "password"               # authentication mode (public, password)
  #     PHOTOPRISM_SITE_URL: "http://localhost:2342/"  # server URL in the format "http(s)://domain.name(:port)/(path)"
  #     PHOTOPRISM_DISABLE_TLS: "false"                # disables HTTPS/TLS even if the site URL starts with https:// and a certificate is available
  #     PHOTOPRISM_DEFAULT_TLS: "true"                 # defaults to a self-signed HTTPS/TLS certificate if no other certificate is available
  #     PHOTOPRISM_ORIGINALS_LIMIT: 5000               # file size limit for originals in MB (increase for high-res video)
  #     PHOTOPRISM_HTTP_COMPRESSION: "gzip"            # improves transfer speed and bandwidth utilization (none or gzip)
  #     PHOTOPRISM_LOG_LEVEL: "info"                   # log level: trace, debug, info, warning, error, fatal, or panic
  #     PHOTOPRISM_READONLY: "false"                   # do not modify originals directory (reduced functionality)
  #     PHOTOPRISM_EXPERIMENTAL: "false"               # enables experimental features
  #     PHOTOPRISM_DISABLE_CHOWN: "false"              # disables updating storage permissions via chmod and chown on startup
  #     PHOTOPRISM_DISABLE_WEBDAV: "false"             # disables built-in WebDAV server
  #     PHOTOPRISM_DISABLE_SETTINGS: "false"           # disables settings UI and API
  #     PHOTOPRISM_DISABLE_TENSORFLOW: "false"         # disables all features depending on TensorFlow
  #     PHOTOPRISM_DISABLE_FACES: "false"              # disables face detection and recognition (requires TensorFlow)
  #     PHOTOPRISM_DISABLE_CLASSIFICATION: "false"     # disables image classification (requires TensorFlow)
  #     PHOTOPRISM_DISABLE_VECTORS: "false"            # disables vector graphics support
  #     PHOTOPRISM_DISABLE_RAW: "false"                # disables indexing and conversion of RAW images
  #     PHOTOPRISM_RAW_PRESETS: "false"                # enables applying user presets when converting RAW images (reduces performance)
  #     PHOTOPRISM_JPEG_QUALITY: 85                    # a higher value increases the quality and file size of JPEG images and thumbnails (25-100)
  #     PHOTOPRISM_DETECT_NSFW: "false"                # automatically flags photos as private that MAY be offensive (requires TensorFlow)
  #     PHOTOPRISM_UPLOAD_NSFW: "true"                 # allows uploads that MAY be offensive (no effect without TensorFlow)
  #     # PHOTOPRISM_DATABASE_DRIVER: "sqlite"         # SQLite is an embedded database that doesn't require a server
  #     PHOTOPRISM_DATABASE_DRIVER: "mysql"            # use MariaDB 10.5+ or MySQL 8+ instead of SQLite for improved performance
  #     PHOTOPRISM_DATABASE_SERVER: "mariadb:3306"     # MariaDB or MySQL database server (hostname:port)
  #     PHOTOPRISM_DATABASE_NAME: "photoprism"         # MariaDB or MySQL database schema name
  #     PHOTOPRISM_DATABASE_USER: "admin"         # MariaDB or MySQL database user name
  #     PHOTOPRISM_DATABASE_PASSWORD: "password"       # MariaDB or MySQL database user password
  #     PHOTOPRISM_SITE_CAPTION: "AI-Powered Photos App"
  #     PHOTOPRISM_SITE_DESCRIPTION: ""                # meta site description
  #     PHOTOPRISM_SITE_AUTHOR: ""                     # meta site author
  #     ## Video Transcoding (https://docs.photoprism.app/getting-started/advanced/transcoding/):
  #     PHOTOPRISM_FFMPEG_ENCODER: "software"        # H.264/AVC encoder (software, intel, nvidia, apple, raspberry, or vaapi)
  #     PHOTOPRISM_FFMPEG_SIZE: "1920"               # video size limit in pixels (720-7680) (default: 3840)
  #     PHOTOPRISM_FFMPEG_BITRATE: "32"              # video bitrate limit in Mbit/s (default: 50)
  #     ## Run/install on first startup (options: update https gpu tensorflow davfs clitools clean):
  #     PHOTOPRISM_INIT: "https gpu tensorflow"
  #     ## Run as a non-root user after initialization (supported: 0, 33, 50-99, 500-600, and 900-1200):
  #     PHOTOPRISM_UID: 1024
  #     PHOTOPRISM_GID: 100
  #     PHOTOPRISM_UMASK: 0002
  #   ## Start as non-root user before initialization (supported: 0, 33, 50-99, 500-600, and 900-1200):
  #   user: "1024:100"
  #   ## Share hardware devices with FFmpeg and TensorFlow (optional):
  #   # devices:
  #   #  - "/dev/dri:/dev/dri"                         # Intel QSV
  #   #  - "/dev/nvidia0:/dev/nvidia0"                 # Nvidia CUDA
  #   #  - "/dev/nvidiactl:/dev/nvidiactl"
  #   #  - "/dev/nvidia-modeset:/dev/nvidia-modeset"
  #   #  - "/dev/nvidia-nvswitchctl:/dev/nvidia-nvswitchctl"
  #   #  - "/dev/nvidia-uvm:/dev/nvidia-uvm"
  #   #  - "/dev/nvidia-uvm-tools:/dev/nvidia-uvm-tools"
  #   #  - "/dev/video11:/dev/video11"                 # Video4Linux Video Encode Device (h264_v4l2m2m)
  #   working_dir: "/photoprism" # do not change or remove
  #   ## Storage Folders: "~" is a shortcut for your home directory, "." for the current directory
  #   volumes:
  #     # "/host/folder:/photoprism/folder"                # Example
  #     - "/volume1/Pictures:/photoprism/originals"               # Original media files (DO NOT REMOVE)
  #     # - "/example/family:/photoprism/originals/family" # *Additional* media folders can be mounted like this
  #     # - "~/Import:/photoprism/import"                  # *Optional* base folder from which files can be imported to originals
  #     - "./storage:/photoprism/storage"                  # *Writable* storage folder for cache, database, and sidecar files (DO NOT REMOVE)

  # ## Database Server (recommended)
  # ## see https://docs.photoprism.app/getting-started/faq/#should-i-use-sqlite-mariadb-or-mysql
  # mariadb:
  #   image: mariadb:11
  #   ## If MariaDB gets stuck in a restart loop, this points to a memory or filesystem issue:
  #   ## https://docs.photoprism.app/getting-started/troubleshooting/#fatal-server-errors
  #   restart: unless-stopped
  #   stop_grace_period: 5s
  #   security_opt: # see https://github.com/MariaDB/mariadb-docker/issues/434#issuecomment-1136151239
  #     - seccomp:unconfined
  #     - apparmor:unconfined
  #   command: --innodb-buffer-pool-size=512M --transaction-isolation=READ-COMMITTED --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --max-connections=512 --innodb-rollback-on-timeout=OFF --innodb-lock-wait-timeout=120
  #   ## Never store database files on an unreliable device such as a USB flash drive, an SD card, or a shared network folder:
  #   volumes:
  #     - "./database:/var/lib/mysql" # DO NOT REMOVE
  #   environment:
  #     MARIADB_AUTO_UPGRADE: "1"
  #     MARIADB_INITDB_SKIP_TZINFO: "1"
  #     MARIADB_DATABASE: "photoprism"
  #     MARIADB_USER: "admin"
  #     MARIADB_PASSWORD: "password"
  #     MARIADB_ROOT_PASSWORD: "password"

  searxng:
    image: searxng/searxng:latest
    container_name: searxng
    hostname: searxng
    environment:
      - SEARXNG_BASE_URL=https://${SEARXNG_HOSTNAME:-localhost}/
    networks:
      - media
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
    logging:
      driver: json-file
      options:
        max-size: 1m
        max-file: 1
    volumes:
      - ${CONFIG_BASE_DIR}/searxng:/etc/searxng:rw
    ports:
      - 8082:8080

  syncthing:
    image: lscr.io/linuxserver/syncthing:latest
    container_name: syncthing
    hostname: syncthing
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
      - UMASK=${UMASK}
    networks:
      - media
    volumes:
      - ${CONFIG_DATA_DIR}:/downloads
      - ${CONFIG_BASE_DIR}/syncthing:/config
      - ${SYNCTHING_MOUNT_DIR_1_LOCAL}:${SYNCTHING_MOUNT_DIR_1_RELATIVE}
      - ${SYNCTHING_MOUNT_DIR_2_LOCAL}:${SYNCTHING_MOUNT_DIR_2_RELATIVE}
    ports:
      - 8384:8384
      - 22000:22000/udp
      - 22000:22000/tcp
      - 21027:21027/udp
    restart: unless-stopped

  tailscale:
    image: tailscale/tailscale:latest
    container_name: tailscale
    hostname: ${TAILSCALE_HOSTNAME}
    cap_add:
      - NET_ADMIN
      - NET_RAW
      - SYS_MODULE
    privileged: true
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TAILSCALE_HOSTNAME=${TAILSCALE_HOSTNAME:?err}
      - TAILSCALE_STATE_ARG=${TAILSCALE_STATE_ARG}
      - TS_ACCEPT_DNS=${TS_ACCEPT_DNS}
      - TS_AUTHKEY=${TS_AUTHKEY:?err}
      - TS_DEST_IP=${TS_DEST_IP}
      - TS_EXTRA_ARGS=${TS_EXTRA_ARGS}
      - TS_KUBE_SECRET=${TS_KUBE_SECRET}
      - TS_OUTBOUND_HTTP_PROXY_LISTEN=${TS_OUTBOUND_HTTP_PROXY_LISTEN}
      - TS_ROUTES=${TS_ROUTES}
      - TS_SOCKET=${TS_SOCKET}
      - TS_SOCKS5_SERVER=${TS_SOCKS5_SERVER}
      - TS_STATE_DIR=${TS_STATE_DIR}
      - TS_TAILSCALED_EXTRA_ARGS=${TS_TAILSCALED_EXTRA_ARGS}
      - TS_USERSPACE=${TS_USERSPACE}
      - TZ=${TZ}
      - UMASK=${UMASK}
    network_mode: host
    volumes:
      - ${CONFIG_BASE_DIR}/tailscale/varlib:/var/lib
      - /dev/net/tun:/dev/net/tun
      - ${CONFIG_BASE_DIR}/tailscale/tmp:/tmp
    restart: unless-stopped

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    hostname: watchtower
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
      - UMASK=${UMASK}
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_INCLUDE_RESTARTING=true
      - WATCHTOWER_INCLUDE_STOPPED=true
      - WATCHTOWER_LABEL_ENABLE=false
      - WATCHTOWER_NOTIFICATION_REPORT=true
      - WATCHTOWER_NOTIFICATION_URL=${WATCHTOWER_NOTIFICATION_URL}
      - WATCHTOWER_POLL_INTERVAL=${WATCHTOWER_POLL_INTERVAL}
      - WATCHTOWER_REMOVE_VOLUMES=true
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    networks:
      - media
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped

networks:
  media:
    name: media
    # external: true
    driver: bridge
    driver_opts:
      com.docker.network.bridge.enable_icc: "true"
      com.docker.network.bridge.enable_ip_masquerade: "true"
      com.docker.network.bridge.host_binding_ipv4: "0.0.0.0"
      com.docker.network.bridge.name: "media"
      com.docker.network.driver.mtu: "1500"
    ipam:
      config:
        - subnet: ${SUBNET}
          gateway: ${GATEWAY_IP}
          ip_range: ${IP_RANGE}
