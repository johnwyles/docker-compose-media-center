# ||--------------------------------------------------------------------------------||
# ||                            Downloading Applications                            ||
# ||--------------------------------------------------------------------------------||
version: "3.7"

services:
  gluetun:
    image: qmcgaw/gluetun
    container_name: gluetun
    hostname: gluetun
    cap_add:
      - NET_ADMIN
    environment:
      - VPN_SERVICE_PROVIDER=${VPN_SERVICE_PROVIDER}
      - OPENVPN_USER=${VPN_USER}
      - OPENVPN_PASSWORD=${VPN_PASS}
      - WIREGUARD_PRIVATE_KEY=${WIREGUARD_PRIVATE_KEY}
      - SERVER_COUNTRIES=${SERVER_COUNTRIES}
    networks:
      - media
    volumes:
      - ${CONFIG_BASE_DIR}/gluetun:/gluetun
    ports:
      - 6000:9000/tcp
      - 6881:6881 # qbittorrent
      - 6881:6881/udp # qbittorrent
      - 7000:8000/tcp
      - 8112:8112 # deluge
      - 8080:8080 # sabnzbd
      - 8091:8091 # qbittorrent
      - 9091:9091 # transmission/transmission-openvpn
      - 51413:51413 # transmission/transmission-openvpn
      - 51413:51413/udp # transmission/transmission-openvpn
    restart: unless-stopped

  deluge:
    image: lscr.io/linuxserver/deluge:latest
    container_name: deluge
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - DELUGE_LOGLEVEL=info
      - UMASK=${UMASK}
    network_mode: "service:gluetun"
    depends_on:
      - gluetun
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DATA_DIR_COMPLETE_LOCAL}:${DATA_DIR_COMPLETE_RELATIVE}
      - ${DATA_DIR_INCOMPLETE_LOCAL}:${DATA_DIR_INCOMPLETE_RELATIVE}
      - ${DATA_DIR_WATCH_LOCAL}:${DATA_DIR_WATCH_RELATIVE}
      - ${CONFIG_BASE_DIR}/deluge:/config
    restart: unless-stopped

  # delugevpn:
  #   container_name: delugevpn
  #   image: binhex/arch-delugevpn
  #   cap_add:
  #     - NET_ADMIN
  #   environment:
  #     VPN_ENABLED: ${VPN_ENABLED}
  #     VPN_USER: ${VPN_USER}
  #     VPN_PASS: ${VPN_PASS}
  #     VPN_PROV: ${VPN_PROV}
  #     VPN_OPTIONS: ${VPN_OPTIONS}
  #     STRICT_PORT_FORWARD: ${STRICT_PORT_FORWARD}
  #     ENABLE_PRIVOXY: ${ENABLE_PRIVOXY}
  #     LAN_NETWORK: ${LAN_NETWORK}
  #     NAME_SERVERS: ${NAME_SERVERS}
  #     VPN_CLIENT: ${VPN_CLIENT}
  #     DELUGE_ENABLE_WEBUI_PASSWORD: ${DELUGE_ENABLE_WEBUI_PASSWORD}
  #     DELUGE_DAEMON_LOG_LEVEL: ${DELUGE_DAEMON_LOG_LEVEL}
  #     DELUGE_WEB_LOG_LEVEL: ${DELUGE_WEB_LOG_LEVEL}
  #     ADDITIONAL_PORTS: ${ADDITIONAL_PORTS}
  #     DEBUG: ${DEBUG}
  #     UMASK: ${UMASK}
  #     PUID: ${PUID}
  #     PGID: ${PGID}
  #   networks:
  #     - media
  #   ports:
  #     - 8112:8112
  #     - 8118:8118
  #     - 58846:58846
  #     - 58946:58946/udp
  #   volumes:
  #     - /etc/localtime:/etc/localtime:ro
  #     - ${DATA_DIR_COMPLETE_LOCAL}:${DATA_DIR_COMPLETE_RELATIVE}
  #     - ${DATA_DIR_INCOMPLETE_LOCAL}:${DATA_DIR_INCOMPLETE_RELATIVE}
  #     - ${DATA_DIR_WATCH_LOCAL}:${DATA_DIR_WATCH_RELATIVE}
  #     - ${CONFIG_BASE_DIR}/delugevpn:/config
  #   restart: unless-stopped

  # nzbget:
  #   image: lscr.io/linuxserver/nzbget:latest
  #   container_name: nzbget
  #   environment:
  #     - NZBGET_PASS=${NZBGET_WEBUI_PASSWORD}
  #     - NZBGET_USER=${NZBGET_WEBUI_USERNAME}
  #     - PUID=${PUID}
  #     - PGID=${PGID}
  #     - TZ=${TZ}
  #     - UMASK=${UMASK}
  #   networks:
  #     - media
  #   # network_mode: "service:transmission-openvpn"
  #   volumes:
  #     - /etc/localtime:/etc/localtime:ro
  #     - ${DATA_DIR_COMPLETE_LOCAL}:${DATA_DIR_COMPLETE_RELATIVE}
  #     - ${DATA_DIR_INCOMPLETE_LOCAL}:${DATA_DIR_INCOMPLETE_RELATIVE}
  #     - ${DATA_DIR_WATCH_LOCAL}:${DATA_DIR_WATCH_RELATIVE}
  #     - ${CONFIG_BASE_DIR}/nzbget:/config
  #   ports:
  #     # nzbget
  #     - 6789:6789
  #   restart: unless-stopped

  # nzbgetvpn:
  #   image: jarlave/nzbgetvpn:2020112501
  #   container_name: nzbgetvpn
  #   hostname: nzbgetvpn
  #   cap_add:
  #     - NET_ADMIN
  #   environment:
  #     - VPN_ENABLED=${VPN_ENABLED}
  #     - VPN_USER=${VPN_USER}
  #     - VPN_PASS=${VPN_PASS}
  #     - VPN_PROV=${VPN_PROV}
  #     - VPN_OPTIONS=${VPN_OPTIONS}
  #     - STRICT_PORT_FORWARD=${STRICT_PORT_FORWARD}
  #     - ENABLE_PRIVOXY=${ENABLE_PRIVOXY}
  #     - LAN_NETWORK=${LAN_NETWORK}
  #     - NAME_SERVERS=${NAME_SERVERS}
  #     - VPN_CLIENT=${VPN_CLIENT}
  #     - DELUGE_ENABLE_WEBUI_PASSWORD=${DELUGE_ENABLE_WEBUI_PASSWORD}
  #     - DELUGE_DAEMON_LOG_LEVEL=${DELUGE_DAEMON_LOG_LEVEL}
  #     - DELUGE_WEB_LOG_LEVEL=${DELUGE_WEB_LOG_LEVEL}
  #     - ADDITIONAL_PORTS=${ADDITIONAL_PORTS}
  #     - DEBUG=${DEBUG}
  #     - UMASK=${UMASK}
  #     - PUID=${PUID}
  #     - PGID=${PGID}
  #   networks:
  #     - media
  #   # network_mode: "service:transmission-openvpn"
  #   volumes:
  #     - /etc/localtime:/etc/localtime:ro
  #     - ${DATA_DIR_COMPLETE_LOCAL}:${DATA_DIR_COMPLETE_RELATIVE}
  #     - ${DATA_DIR_INCOMPLETE_LOCAL}:${DATA_DIR_INCOMPLETE_RELATIVE}
  #     - ${DATA_DIR_WATCH_LOCAL}:${DATA_DIR_WATCH_RELATIVE}
  #     - ${CONFIG_BASE_DIR}/nzbgetvpn:/config
  #   ports:
  #     # nzbget
  #     - 6789:6789
  #   restart: unless-stopped

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=${UMASK}
      - WEBUI_PORT=8091
    network_mode: "service:gluetun"
    depends_on:
      - gluetun
    volumes:
      - ${DATA_DIR_COMPLETE_LOCAL}:${DATA_DIR_COMPLETE_RELATIVE}
      - ${DATA_DIR_INCOMPLETE_LOCAL}:${DATA_DIR_INCOMPLETE_RELATIVE}
      - ${DATA_DIR_WATCH_LOCAL}:${DATA_DIR_WATCH_RELATIVE}
      - ${CONFIG_BASE_DIR}/qbittorrent:/config
    restart: unless-stopped

  sabnzbd:
    image: lscr.io/linuxserver/sabnzbd:latest
    container_name: sabnzbd
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=${UMASK}
    network_mode: "service:gluetun"
    depends_on:
      - gluetun
    volumes:
      - ${DATA_DIR_COMPLETE_LOCAL}:${DATA_DIR_COMPLETE_RELATIVE}
      - ${DATA_DIR_INCOMPLETE_LOCAL}:${DATA_DIR_INCOMPLETE_RELATIVE}
      - ${DATA_DIR_WATCH_LOCAL}:${DATA_DIR_WATCH_RELATIVE}
      - ${CONFIG_BASE_DIR}/sabnzbd:/config
    restart: unless-stopped

  # sabnzbdvpn:
  #   image: binhex/arch-sabnzbdvpn
  #   container_name: sabnzbdvpn
  #   hostname: 
  #   cap_add:
  #     - NET_ADMIN
  #   environment:
  #     VPN_ENABLED: ${VPN_ENABLED}
  #     VPN_USER: ${VPN_USER}
  #     VPN_PASS: ${VPN_PASS}
  #     VPN_PROV: ${VPN_PROV}
  #     VPN_OPTIONS: ${VPN_OPTIONS}
  #     STRICT_PORT_FORWARD: ${STRICT_PORT_FORWARD}
  #     ENABLE_PRIVOXY: ${ENABLE_PRIVOXY}
  #     LAN_NETWORK: ${LAN_NETWORK}
  #     NAME_SERVERS: ${NAME_SERVERS}
  #     VPN_CLIENT: ${VPN_CLIENT}
  #     DELUGE_ENABLE_WEBUI_PASSWORD: ${DELUGE_ENABLE_WEBUI_PASSWORD}
  #     DELUGE_DAEMON_LOG_LEVEL: ${DELUGE_DAEMON_LOG_LEVEL}
  #     DELUGE_WEB_LOG_LEVEL: ${DELUGE_WEB_LOG_LEVEL}
  #     ADDITIONAL_PORTS: ${ADDITIONAL_PORTS}
  #     DEBUG: ${DEBUG}
  #     UMASK: ${UMASK}
  #     PUID: ${PUID}
  #     PGID: ${PGID}
  #   networks:
  #     - media
  #   ports:
  #     - 8080:8080
  #     - 8090:8090
  #     - 8119:8118
  #     # deluge
  #     # - 8112:8112
  #     # - 6881:6881
  #     # - 6881:6881/udp
  #     # - 9910:9910
  #     # nzbget
  #     # - 6789:6789
  #     # sabnzbd
  #     # - 8080:8080
  #     # - 8090:8090
  #     # - 8119:8118
  #     #transmission
  #     - 9091:9091
  #     - 51413:51413
  #     - 51413:51413/udp
  #   volumes:
  #     - /etc/localtime:/etc/localtime:ro
  #     - ${DATA_DIR_COMPLETE_LOCAL}:${DATA_DIR_COMPLETE_RELATIVE}
  #     - ${DATA_DIR_INCOMPLETE_LOCAL}:${DATA_DIR_INCOMPLETE_RELATIVE}
  #     - ${DATA_DIR_WATCH_LOCAL}:${DATA_DIR_WATCH_RELATIVE}
  #     - ${CONFIG_BASE_DIR}/sabnzbdvpn:/config
  #   restart: unless-stopped

  transmission:
    image: lscr.io/linuxserver/transmission:latest
    container_name: transmission
    environment:
      - DEBUG=${DEBUG}
      - ENABLE_UFW=true
      - GLOBAL_APPLY_PERMISSIONS=false
      - HOST_WHITELIST=
      - LOCAL_NETWORK=
      - PASS=${TRANSMISSION_PASS}
      - PEER_DNS_PIN_ROUTES=false
      - PEER_DNS=false
      - PEERPORT=
      - PGID=${PGID}
      - PUID=${PUID}
      - TRANSMISSION_DOWNLOAD_DIR=${DATA_DIR_COMPLETE_RELATIVE}
      - TRANSMISSION_INCOMPLETE_DIR=${DATA_DIR_INCOMPLETE_RELATIVE}
      
      # (optional) Download the ZIP file below and extract the contents to
      # "flood-for-transmission" in the "[CONFIG_BASE_DIR]/transmission" location: 
      #     https://github.com/johman10/flood-for-transmission/releases/download/latest/flood-for-transmission.zip    
      - TRANSMISSION_WEB_HOME=/config/flood-for-transmission
      - TRANSMISSION_WEB_UI=flood-for-transmission
      
      - TZ=${TZ}
      - UFW_ALLOW_GW_NET=true
      - UFW_DISABLE_IPTABLES_REJECT=true
      - UFW_EXTRA_PORTS=6789,6881,8080,8112,9091,9910
      - UMASK=${UMASK}
      - USER=${TRANSMISSION_USER}
      - WHITELIST=
    network_mode: "service:gluetun"
    depends_on:
      - gluetun
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DATA_DIR_COMPLETE_LOCAL}:${DATA_DIR_COMPLETE_RELATIVE}
      - ${DATA_DIR_INCOMPLETE_LOCAL}:${DATA_DIR_INCOMPLETE_RELATIVE}
      - ${DATA_DIR_WATCH_LOCAL}:${DATA_DIR_WATCH_RELATIVE}
      - ${CONFIG_BASE_DIR}/transmission:/config
    restart: unless-stopped

  # transmission-openvpn:
  #   image: haugene/transmission-openvpn
  #   container_name: transmission-openvpn
  #   hostname: transmission-openvpn
  #   cap_add:
  #     - NET_ADMIN
  #   privileged: true
  #   dns:
  #     - 8.8.8.8
  #     - 8.8.4.4
  #   environment:
  #     - DEBUG=${DEBUG}
  #     - ENABLE_UFW=true
  #     - GLOBAL_APPLY_PERMISSIONS=false
  #     - HEALTH_CHECK_HOST=${HEALTH_CHECK_HOST}
  #     - LOCAL_NETWORK=
  #     - OPENVPN_CONFIG=${OPENVPN_CONFIG}
  #     - OPENVPN_OPTS=${OPENVPN_OPTS}
  #     - OPENVPN_PASSWORD=${VPN_PASS}
  #     - OPENVPN_PROVIDER=${OPENVPN_PROVIDER}
  #     - OPENVPN_USERNAME=${VPN_USER}
  #     - PEER_DNS=false
  #     - PEER_DNS_PIN_ROUTES=false
  #     - PGID=${PGID}
  #     - PUID=${PUID}
  #     - TRANSMISSION_DOWNLOAD_DIR=${DATA_DIR_COMPLETE_RELATIVE}
  #     - TRANSMISSION_INCOMPLETE_DIR=${DATA_DIR_INCOMPLETE_RELATIVE}
  #     - TRANSMISSION_WEB_UI=flood-for-transmission
  #     - TZ=${TZ}
  #     - UFW_ALLOW_GW_NET=true
  #     - UFW_DISABLE_IPTABLES_REJECT=true
  #     - UFW_EXTRA_PORTS=6789,6881,8080,8112,9091,9910
  #     - UMASK=${UMASK}
  #   logging:
  #     driver: json-file
  #     options:
  #       max-size: 10m
  #   networks:
  #     - media
  #   command: [ "dumb-init", "/entrypoint.sh", "/etc/openvpn/start.sh" ]
  #   volumes:
  #     - ${DATA_DIR_COMPLETE_LOCAL}:${DATA_DIR_COMPLETE_RELATIVE}
  #     - ${DATA_DIR_INCOMPLETE_LOCAL}:${DATA_DIR_INCOMPLETE_RELATIVE}
  #     - ${DATA_DIR_WATCH_LOCAL}:${DATA_DIR_WATCH_RELATIVE}
  #     - ${CONFIG_BASE_DIR}/transmission-openvpn:/config
  #     - ${CONFIG_BASE_DIR}/transmission-openvpn/entrypoint.sh:/entrypoint.sh
  #     - ${CONFIG_BASE_DIR}/transmission-openvpn/openvpn:/etc/openvpn/custom
  #   ports:
  #     # deluge
  #     - 8112:8112
  #     - 6881:6881
  #     - 6881:6881/udp
  #     - 9910:9910
  #     # nzbget
  #     - 6789:6789
  #     # sabnzbd
  #     - 8080:8080
  #     #transmission
  #     - 9091:9091
  #   restart: unless-stopped

  unpackerr:
    image: golift/unpackerr
    container_name: unpackerr
    user: 1024:100
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
      - UN_DEBUG=true
      - UN_DIR_MODE=0755
      - UN_FILE_MODE=0644
      - UN_FOLDER_0_DELETE_AFTER=10m
      - UN_FOLDER_0_DELETE_FILES=false
      - UN_FOLDER_0_DELETE_ORIGINAL=false
      - UN_FOLDER_0_EXTRACT_ISOS=true
      - UN_FOLDER_0_EXTRACT_PATH=
      - UN_FOLDER_0_MOVE_BACK=false
      - UN_FOLDER_0_PATH=${DATA_DIR_COMPLETE_RELATIVE}
      - UN_INTERVAL=2m
      - UN_LIDARR_0_API_KEY=${UN_LIDARR_0_API_KEY}
      - UN_LIDARR_0_DELETE_DELAY=5m
      - UN_LIDARR_0_DELETE_ORIG=false
      - UN_LIDARR_0_PATHS_0=${DATA_DIR_COMPLETE_RELATIVE}
      - UN_LIDARR_0_PROTOCOLS=torrent,usenet
      - UN_LIDARR_0_TIMEOUT=10s
      - UN_LIDARR_0_URL=http://lidarr:8686
      - UN_LOG_FILE_MB=10
      - UN_LOG_FILE=
      - UN_LOG_FILES=10
      - UN_MAX_RETRIES=3
      - UN_PARALLEL=1
      - UN_RADARR_0_API_KEY=${UN_RADARR_0_API_KEY}
      - UN_RADARR_0_DELETE_DELAY=5m
      - UN_RADARR_0_DELETE_ORIG=false
      - UN_RADARR_0_PATHS_0=${DATA_DIR_COMPLETE_RELATIVE}
      - UN_RADARR_0_PROTOCOLS=torrent,usenet
      - UN_RADARR_0_TIMEOUT=10s
      - UN_RADARR_0_URL=http://radarr:7878
      - UN_READARR_0_API_KEY=${UN_READARR_0_API_KEY}
      - UN_READARR_0_DELETE_DELAY=5m
      - UN_READARR_0_DELETE_ORIG=false
      - UN_READARR_0_PATHS_0=${DATA_DIR_COMPLETE_RELATIVE}
      - UN_READARR_0_PROTOCOLS=torrent,usenet
      - UN_READARR_0_TIMEOUT=10s
      - UN_READARR_0_URL=http://readarr:8787
      - UN_RETRY_DELAY=5m
      - UN_SONARR_0_API_KEY=${UN_SONARR_0_API_KEY}
      - UN_SONARR_0_DELETE_DELAY=5m
      - UN_SONARR_0_DELETE_ORIG=false
      - UN_SONARR_0_PATHS_0=${DATA_DIR_COMPLETE_RELATIVE}
      - UN_SONARR_0_PROTOCOLS=torrent,usenet
      - UN_SONARR_0_TIMEOUT=10s
      - UN_SONARR_0_URL=http://sonarr:8989
      - UN_START_DELAY=1m
      # TODO: Add or remove these
      # - UN_CMDHOOK_0_COMMAND=
      # - UN_CMDHOOK_0_EVENTS_0=0
      # - UN_CMDHOOK_0_EXCLUDE_0=
      # - UN_CMDHOOK_0_NAME=
      # - UN_CMDHOOK_0_SHELL=false
      # - UN_CMDHOOK_0_SILENT=false
      # - UN_CMDHOOK_0_TIMEOUT=10s
      # - UN_WEBHOOK_0_CHANNEL=
      # - UN_WEBHOOK_0_CONTENT_TYPE=application/json
      # - UN_WEBHOOK_0_EVENTS_0=0
      # - UN_WEBHOOK_0_EXCLUDE_0=
      # - UN_WEBHOOK_0_IGNORE_SSL=false
      # - UN_WEBHOOK_0_NAME=
      # - UN_WEBHOOK_0_NICKNAME=Unpackerr
      # - UN_WEBHOOK_0_SILENT=false
      # - UN_WEBHOOK_0_TEMPLATE_PATH=
      # - UN_WEBHOOK_0_TIMEOUT=10s
      # - UN_WEBHOOK_0_URL=
    networks:
      - media
    security_opt:
      - no-new-privileges:true
    volumes:
      - ${DATA_DIR_COMPLETE_LOCAL}:${DATA_DIR_COMPLETE_RELATIVE}
    restart: unless-stopped

networks:
  media:
    name: media
    driver: bridge
    driver_opts:
      com.docker.network.bridge.enable_icc: "true"
      com.docker.network.bridge.enable_ip_masquerade: "true"
      com.docker.network.bridge.host_binding_ipv4: "0.0.0.0"
      com.docker.network.bridge.name: "media"
      com.docker.network.driver.mtu: "1500"
    ipam:
      config:
        - subnet: ${SUBNET}
          gateway: ${GATEWAY_IP}
          ip_range: ${IP_RANGE}
